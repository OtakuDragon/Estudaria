{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 props\
\
Props s\'e3o a maneira de em React passar informa\'e7\'f5es de um componente\
pai para um componente filho, da seguinte forma, o componente filho recebe em seu construtor\
um objeto javascript com o nome props.\
\
O componente pai passa na tag JSX do filho as props no formato de atributos \
da tag com nomes.\
\
O filho recupera as informa\'e7\'f5es do objeto props como props.nomeAtributo\
\
Ex:\
\
//Declara\'e7\'e3o no componente pai\
<AlbumDetail album=\{album\} />\
\
//Declara\'e7\'e3o do componente filho\
export function AlbumDetail(props) \{\
        return (\
            <View>\
                <Text>\{props.album.title\}</Text>\
            </View>\
        );\
\}\
=================================================================================\
state\
\
State \'e9 um mecanismo do react de manter informa\'e7\'f5es internas do componente\
e atualiza-lo quando o state do componente muda.\
\
No construtor ou como uma variavel o state \'e9 inicializado com algum objeto\
e durante a execu\'e7\'e3o do programa o c\'f3digo chama this.setState() passando um novo\
objeto ou uma fun\'e7\'e3o de callback com o novo state, e o componente \'e9 renderizado\
novamente.\
\
Apenas class based components possuem state.}