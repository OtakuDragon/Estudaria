{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Componentes\
\
Sempre h\'e1 apenas um root component declarado na index.js\
e registrado na AppRegistry, todos os outros componentes s\'e3o\
filhos do componente root.\
-------------------------------------------------------------------------------\
Tipos de componente \
\
Functional components\
\
Um componente funcional \'e9 uma fun\'e7\'e3o javascript que retorna JSX.\
\
Ex:\
\
export const Header = (props) => \{\
    return (\
        <View>\
            <Text>Header</Text>\
        </View>\
    );\
\};\
\
------------------------------------------------------------------------------\
Class based components\
\
Um class based component \'e9 uma classe ES6 que extende Component e possui\
muitas funcionalidades alem de s\'f3 montar JSX.\
\
Uma class based component deve sempre declarar o m\'e9todo render que define\
o JSX que ela ir\'e1 renderizar, os outros m\'e9todo s\'e3o opcionais.\
\
Ex:\
\
export class AlbumList extends Component \{\
    render() \{\
        return (\
            <View>\
                <Text>Album list</Text>\
            </View>\
        );\
    \}\
\}\
\
------------------------------------------------------------------------------\
Lifecycle methods\
\
componentWillMount()\
\
Executado uma vez antes do componente ser renderizado.}