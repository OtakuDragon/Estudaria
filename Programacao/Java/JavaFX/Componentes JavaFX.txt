Componentes JavaFX

Label

Componente utilizado para exibir texto
estático.
---------------------------------------------
ex:

Label label = new Label("Exemplo");
=============================================
TextField

Equivalente ao input type text do HTML.

---------------------------------------------
ex:

TextField nome = new TextField();

//Texto cinza que explica o que o campo espera,
//e desaparece quando o usuário clica no campo.
nome.setPromptText("Nome do usuário");

//Recupera o conteúdo do campo.
String nomeUsuario = nome.getText();
==============================================
Checkbox

Equivalente ao input type checkbox do HTML.

-----------------------------------------------
ex:

//Cria a checkbox com uma label padrão(opcional) que aparece
//à direita.
Checkbox checkbox = new Checkbox("Opção 1");

//Verifica se a checkbox está selecionada ou não.
checkbox.isSelected();
//Marca a checkbox no código.
checkbox.setSelected(true);
==============================================
ChoiceBox e ComboBox

Equivalentes ao selectOneMenu do primefaces,
ComboBox possui mais funcionalidades e possui
a lista melhor posicionada abaixo do campo do
que ChoiceBox.

-----------------------------------------------
ex:

CheckBox<String> selectOneMenu = new CheckBox<>(listaDeItens);
ChoiceBox<String> selectOneMenu = new ChoiceBox<>(listaDeItens);
===============================================
ListView

Equivalente ao selectManyMenu do primefaces, mas por padrão possui
o selection mode como SINGLE.

-----------------------------------------------
ex:

ListView<String> listView = new ListView<>();
listView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);

listView.getItems().add("A");
listView.getItems().add("B");
listView.setMaxHeight(300);
================================================
TreeView

Exibe os dados de forma hierarquica como as pastas
de um sistema operacional, a arvore tem apenas um root,
e apartir desse root vários branches podem ser inseridos.
------------------------------------------------
ex:

@Override
public void start(Stage primaryStage) {
	window = primaryStage;
	window.setTitle("JavaFX - thenewboston");

	TreeItem<String> root, bucky, megan;

	//Root
	root = new TreeItem<>();
	root.setExpanded(true);

	//Bucky
	bucky = makeBranch("Bucky", root);
	makeBranch("thenewboston", bucky);
	makeBranch("YouTube", bucky);
	makeBranch("Chicken", bucky);

	//Megan
	megan = makeBranch("Megan", root);
	makeBranch("Glitter", megan);
	makeBranch("Makeup", megan);

	//Create the tree and hide the main Root
	tree = new TreeView<>(root);
	//Esconde a root para dar a aparência que cada branch da arvore é um roots.
	tree.setShowRoot(false);

	//Layout
	StackPane layout = new StackPane();
	layout.getChildren().add(tree);
	Scene scene = new Scene(layout, 300, 250);
	window.setScene(scene);
	window.show();
}

//Create branches
public TreeItem<String> makeBranch(String title, TreeItem<String> parent) {
	TreeItem<String> item = new TreeItem<>(title);
	item.setExpanded(true);
	
	parent.getChildren().add(item);
	return item;
}

