API DOM 

DOM monta uma arvore do arquivo xml de memoria e 
você a acessa apartir da raiz, que é a tag raiz

============================================================
Extraindo dados de um XML com DOM

DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
DocumentBuilder db = dbf.newDocumentBuilder();
		
Document doc = db.parse("usuarios.xml");//cria a arvore do arquivo na memoria

Element elem = doc.getDocumentElement();//retorna uma referencia a tag raiz do arquivo xml
NodeList usuarioNodeList = elem.getElementsByTagName("usuario");//retorna uma lista com todos os filhos usuario da tag raiz

Element tagUsuario = (Element) usuarioNodeList.item(0);//retorna o primeiro usuario na lista como um elemento
String id = tagUsuario.getAttribute("id");//recupera o atributo id deste filho

NodeList nomeNodeList = tagUsuario.getElementsByTagName("nome");//cria uma lista dos elementos nome de usuario
Element tagNome = (Element) nomeNodeList.item(0);//retorna o priemeiro e unico elemento desta lista
String nome = tagNome.getTextContent();//recupera o valor de texto nesta tag

------------------------------------------------------
arquivo xml usado no exemplo acima

<?xml version="1.0" encoding="UTF-8"?>

<usuarios>
	<usuario id="1">
		<nome>José da Silva</nome>
		<idade>30</idade>
		<email>abc@xyz.com</email>
	</usuario>
	
	<usuario id="2">
		<nome>Maria da Silva</nome>
		<idade>20</idade>
		<email>def@xyz.com</email>
	</usuario>
</usuarios>

================================================================================
Validando XML com XML schema na API DOM

XML schema é a linguagem de validação do XML
que eu não conheço ainda '-' mas em um futuro proximo quem sabe


//Faz a validação de 'usuarios.xml'
SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
Schema schema = factory.newSchema(new File("usuarios.xsd"));//recebe o caminho do arquivo XML schema
Validator validator = schema.newValidator();
validator.validate(new StreamSource(new File("usuarios.xml")));//recebe o caminho do arquivo XML

------------------------------------------------------
arquivo xsd usado no exemplo acima

esta na pasta.

=================================================================================
Escrevendo um arquivo XML no java com DOM

DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
DocumentBuilder db = dbf.newDocumentBuilder();
		
//Cria um novo documento XML
Document doc = db.newDocument();
		
//Cria a tag raiz 'usuarios'
Element rootElem = doc.createElement("usuarios");
doc.appendChild(rootElem);
		
//Cria a tag 'usuario'
Element usuarioElem = doc.createElement("usuario");
usuarioElem.setAttribute("id", "1"); // define um atributo
rootElem.appendChild(usuarioElem);
		
//Cria a tag 'nome'
Element nomeElem = doc.createElement("nome");
Text nome = doc.createTextNode("José da Silva");//cria o nó de texto 
nomeElem.appendChild(nome);//insere o nó de texto na tag nome
usuarioElem.appendChild(nomeElem);//insere a tag nome na tag usuario
		
		
//Cria um transformer, que gerará o arquivo XML
TransformerFactory tf = TransformerFactory.newInstance();
Transformer trans = tf.newTransformer();
trans.setOutputProperty(OutputKeys.INDENT, "yes");//define que o arquivo deve ser indentado e não apenas em uma linha
		
//A propriedade abaixo muda a codificação do XML, fazendo com que os acentos
//possam ser gerados adequadamente
trans.setOutputProperty(OutputKeys.ENCODING, "ISO-8859-1");
		
//Define a origem e destino da transformação
FileWriter fw = new FileWriter("usuarios.xml");
StreamResult sr = new StreamResult(fw);
DOMSource source = new DOMSource(doc);
		
//Gera o XML de saída
trans.transform(source, sr);
fw.close();
