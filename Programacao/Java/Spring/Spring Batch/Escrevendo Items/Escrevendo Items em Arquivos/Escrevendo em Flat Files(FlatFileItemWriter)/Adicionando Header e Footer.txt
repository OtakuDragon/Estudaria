Adicionando Header e Footer

O FlatFileItemWriter oferece duas propriedades de callback
que nos permite incluir header e footer nos arquivos que escre
vemos elas são:

* FlatFileHeaderCallback headerCallback

* FlatFileFooterCallback footerCallback

Estas propriedades recebem como valor a referencia a o id
de uma implementação das suas interfaces.
======================================================
FlatFileHeaderCallback 

O FlatFileHeaderCallback é chamado antes do método write()
do ItemWriter e nos permite adicionar uma ou mais linhas antes
da escrita dos items

FlatFileHeaderCallback  são implementações da interface FlatFileHeaderCallback 
que possui um método:

public void writeHeader(Writer writer) throws IOException;

E através dele conseguimos escrever no arquivo utilizando o método
writer.write(String line) para cada linha do header.
-------------------------------------------------------------------------------------------
ex:

Implementação

public class ProductHeaderCallback implements FlatFileHeaderCallback {
	@Override
	public void writeHeader(Writer writer) throws IOException {
	//Escreve uma linha no arquivo chamar write() de novo escreveria uma segunda linha
	writer.write("# Generated by FlatFileHeaderCallback");

	}
}

Configuração

<bean id="productItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
	<property name="resource" value="file:target/outputs/fixedwidth-headerfooter.txt" />
	<property name="headerCallback" ref="headerCallback" />
	(...)
</bean>
<bean id="headerCallback" class="com.otk.writer.callback.ProductHeaderCallback"/>
========================================================
FlatFileFooterCallback

O FlatFileFooterCallback é chamado após a escrita de todos
os items no arquivo e nos permite adicionar uma ou mais linhas 
no fim deste arquivo, geralmente utilizando dados sobre a execução
do writer.

Para que o FlatFileFooterCallback tenha acesso aos dados da execução
do writer ele precisa implementar a interface StepExecutionListenerSupport
um StepExecutionListener, e ser declarado na tag <listeners> do tasklet

FlatFileFooterCallback são implementações da interface FlatFileFooterCallback
que herdam de StepExecutionListenerSupport para ter acesso aos dados da execução do step

um FlatFileFooterCallback possui dois métodos:

public void beforeStep(StepExecution stepExecution) - Chamado antes da execução do step, em um footer ele é utilizado
																				para guardar a referencia ao objeto StepExecution que após a execução
																				do writer(finalização do chunk tasklet) possuirá todos os dados sobre a execução


public void writeFooter(Writer writer) throws IOException - Chamado após a escrita de todos os items no arquivo e utiliza a referencia guardada de
																					  StepExecution para inserir metadata de execução do footer

-------------------------------------------------------------------------------------------
ex:

Implementação

public class ProductFooterCallback extends StepExecutionListenerSupport implements FlatFileFooterCallback {
	//Referencia de StepExecution guardada durante a execução e utilizada na escrita do footer
	//como fonte de metadata
	private StepExecution stepExecution;
	
	//Método que escreve o footer ao fim do arquivo
	@Override
	public void writeFooter(Writer writer) throws IOException {
		writer.write("# Write count: "+ stepExecution.getWriteCount());
		writer.write(System.getProperty("line.separator"));
		long delta = stepExecution.getEndTime().getTime()- stepExecution.getStartTime().getTime();
		writer.write("# Done in: " + delta + " ms");
	}
	
	//Método que da acesso ao footer callback a uma referencia ao step execution antes
	//da execução do step que é preenchida durante esta execução e utilizada no fim
	@Override
	public void beforeStep(StepExecution stepExecution) {
	this.stepExecution = stepExecution;
	}
}

Configuração

<job id="writeProductsJob" xmlns="http://www.springframework.org/schema/batch">
	<step id="readWrite">
		<tasklet>
			<chunk reader="productItemReader" writer="productItemWriter" commit-interval="100" />
			<!--Declaração do footerCallback como listener do tasklet
			<listeners>
				<listener ref="footerCallback" />
			</listeners>
		</tasklet>
	</step>
</job>

<bean id="productItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
	<property name="resource" value="file:target/outputs/fixedwidth-headerfooter.txt" />
	<property name="headerCallback" ref="headerCallback" />
	<property name="footerCallback"ref="footerCallback" />
	(...)
</bean>

<bean id="headerCallback" class="com.otk.writer.callback.ProductHeaderCallback"/>
<bean id="footerCallback" class="com.otk.writer.callback.ProductFooterCallback"/>