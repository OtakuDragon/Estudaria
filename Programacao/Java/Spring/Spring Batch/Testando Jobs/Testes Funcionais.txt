Testes Funcionais

Testes funcionais são testes que executam uma funcionalidade
completa e verificam se o resultado foi o esperado, para o
spring batch isso significa a possibilidade de se executar
steps separadamente ou um job por inteiro em uma classe de
teste junit

Isto é feito possivel pelo suporte do spring ao junit com as
anotações:

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration

e pela utilização de classe JobLauncherTestUtils que permite
lançar jobs e steps em uma classe de teste.

==============================================================
ex:

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration
public class ProductStepTest {
	String PRODUCTS_PATH = "classpath:com/manning/sbia/ch14/input/products.txt";
	String EXCLUDES_REF_PATH = "com/manning/sbia/ch14/output/excludes.txt";
	String EXCLUDES_PATH = "./target/excludes.txt";
	
	@Autowired
	private JobLauncherTestUtils jobLauncherTestUtils;
	@Autowired
	private SimpleJdbcTemplate jdbcTemplate;
	
	//Lançando um step
	@Test
	@DirtiesContext
	public void testIntegration() throws Exception {
		JobParameters jobParameters = new JobParametersBuilder()
		.addString(PARAM_INPUT_RESOURCE, PRODUCTS_PATH)
		.toJobParameters();
		JobExecution exec = jobLauncherTestUtils
		.launchStep("productsStep",jobParameters);
		assertEquals(
		BatchStatus.COMPLETED, exec.getStatus());
		StepExecution setpExec = exec.getStepExecutions()
		.iterator().next();
		assertEquals(2, setpExec.getFilterCount());
		assertEquals(6, setpExec.getWriteCount());
		assertEquals(6, jdbcTemplate.queryForInt(
		"SELECT COUNT(*) from PRODUCT"));
		assertFileEquals(
		new ClassPathResource(EXCLUDES_REF_PATH),
		new FileSystemResource(EXCLUDES_PATH));
	}
	
	//Lançando um job
	@Test
	@DirtiesContext
	public void integration() throws Exception {
		JobParameters jobParameters = new JobParametersBuilder()
		.addString(PARAM_INPUT_RESOURCE, PRODUCTS_PATH)
		.addString(PARAM_REPORT_RESOURCE, STATISTIC_PATH)
		.toJobParameters();

		JobExecution exec = jobLauncherTestUtils
		.launchJob(jobParameters);
		assertEquals(BatchStatus.COMPLETED,
		exec.getStatus());
		assertEquals(6, jdbcTemplate.queryForInt(
		"SELECT COUNT(*) from PRODUCT"));
	}
}