Singleton Pattern

Singleton pattern é um creational pattern que tem
como objetivo que fazer com que uma classe que segue
este pattern somente possua uma instância na aplicação.

Isto é alcançado definindo o construtor da classe como 
privado e adicionando na classe um atributo estatico de
uma instância da propria classe.

=======================================================
ex:

//Classe singleton
public class SingleObject { 
 
 //create an object of SingleObject 
 private static SingleObject instance = new SingleObject(); 
 
 //make the constructor private so that this class cannot be 
 //instantiated 
 private SingleObject(){} 
 
 //Get the only object available 
 public static SingleObject getInstance(){ 
 return instance; 
 } 
 
 public void showMessage(){ 
 System.out.println("Hello World!"); 
 } 
}

//Utilização do singleton
public class SingletonPatternDemo { 
 public static void main(String[] args) { 
 
 //illegal construct 
 //Compile Time Error: The constructor SingleObject() is not 
visible 
 //SingleObject object = new SingleObject(); 
 
 //Get the only object available 
 SingleObject object = SingleObject.getInstance(); 
 
 //show the message 
 object.showMessage(); 
 } 
